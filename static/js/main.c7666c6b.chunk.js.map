{"version":3,"sources":["context/tarotContext.js","services/GetAPI.js","context/tarotProvider.js","images/logo2.png","components/Footer.js","pages/Login.js","components/Answer.js","pages/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["tarotContext","createContext","API","fetchTarot","a","fetch","returnAPI","json","jsonAPI","resultAPI","cards","console","log","TarotProvider","children","useState","nameUser","setNameUser","dataAPI","setDataAPI","valueProvider","getDataFromAPI","Provider","value","Footer","id","Login","nameLogin","setNameLogin","isDisabled","setIsDisabled","useContext","useEffect","length","className","src","LogoTarotVision","alt","type","required","placeholder","onChange","target","to","disabled","onClick","Answer","name_short","name","meaning_up","meaning_rev","desc","MainPage","showCard","setShowCard","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","window","location","pathname","document","getElementById"],"mappings":"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","file":"static/js/main.c7666c6b.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst tarotContext = createContext();\n\nexport default tarotContext;","const API = 'https://rws-cards-api.herokuapp.com/api/v1/cards/random';\n\nexport default async function fetchTarot () {\n  const returnAPI = await fetch(API);\n  const jsonAPI = await returnAPI.json();\n  const resultAPI = jsonAPI.cards[0];\n  console.log('resultado api', resultAPI)\n  return resultAPI;\n};\n","import React, { useState } from 'react';\nimport tarotContext from './tarotContext';\nimport fetchTarot from '../services/GetAPI';\n\nfunction TarotProvider({ children }) {\n  const [nameUser, setNameUser] = useState('');\n  const [dataAPI, setDataAPI] = useState([]);\n\n  const getDataFromAPI = async () => {\n    const cards = await fetchTarot();\n    setDataAPI(cards);\n  };\n\n  const valueProvider = {\n    getDataFromAPI,\n    dataAPI,\n    setDataAPI,\n    nameUser,\n    setNameUser,\n  }\n\n  return(\n    <tarotContext.Provider\n      value= { valueProvider }\n    >\n      {children}\n    </tarotContext.Provider>\n  );\n}\n\nexport default TarotProvider;\n","export default __webpack_public_path__ + \"static/media/logo2.82df64ff.png\";","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer id=\"rodape\">\n      <p>Bruna Franciele, Alessandra Santos e Júlia Pôrto © 2020 - Todos os direitos reservados </p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport tarotContext from '../context/tarotContext';\nimport LogoTarotVision from '../images/logo2.png';\nimport Footer from '../components/Footer';\nimport '../style/login.css';\n\nfunction Login() {\n  const [nameLogin, setNameLogin] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n  const { setNameUser } = useContext(tarotContext);\n\n  useEffect(() => {\n    const two = 2;\n    const minName = nameLogin.length >= two;\n    if (minName) {\n      setIsDisabled(false);\n    }\n  }, [nameLogin]);\n\n  const handleRedirect = () => {\n    setNameUser(nameLogin);\n  };\n\n  return (\n    <main className=\"bodyLogin\">\n      <div className=\"logoLogin\">\n      <img src={ LogoTarotVision } alt=\"Logo Tarot Vision\" />\n      </div>\n      <h1> What's your name, querent? </h1>\n      <form>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Name\"\n          onChange={({ target }) => setNameLogin(target.value)}\n        />\n        <div>\n          <Link to=\"/main-page\">\n            <button\n              type=\"button\"\n              disabled={isDisabled}\n              onClick={handleRedirect}\n            >\n              Start\n          </button>\n          </Link>\n        </div>\n      </form>\n      <div className=\"div-footer\">\n        <Footer />\n      </div>\n    </main>\n  );\n}\n\nexport default Login;\n","import React, { useContext } from 'react';\nimport tarotContext from '../context/tarotContext';\nimport '../style/mainPage.css';\n\nfunction Answer() {\n  const { dataAPI } = useContext(tarotContext);\n\n  if(dataAPI.length === 0) {\n    console.log('if');\n    return <h1>Loading...</h1>\n  }\n\n  return (\n    <div className=\"bodyMain\">\n      <div className=\"div-image\">\n        <img src={ `/${dataAPI.name_short}.png` } alt=\"tentativa de foto\"/>\n      </div>\n      <div className=\"div-answer\">\n        <h2 className=\"text-answer h2answer\">{ dataAPI.name }</h2>\n        <p className=\"text-answer\">{ dataAPI.meaning_up }</p>\n        <p className=\"text-answer\">{ dataAPI.meaning_rev }</p>\n        <p className=\"text-answer\">{ dataAPI.desc }</p>\n      </div>\n  </div>\n  );\n}\n\nexport default Answer;","import React, { useState, useContext, useEffect } from 'react';\nimport tarotContext from '../context/tarotContext';\nimport Answer from '../components/Answer';\nimport Footer from '../components/Footer';\nimport '../style/mainPage.css';\n\nfunction MainPage() {\n  const { dataAPI, getDataFromAPI, nameUser } = useContext(tarotContext);\n  const [showCard, setShowCard] = useState(false);\n\n  useEffect(() => {\n    getDataFromAPI();\n  }, [])\n\n  function handleClick() {\n    setShowCard(true);\n  }\n  if(dataAPI.length === 0) {\n    <h1>Loading...</h1>\n  }\n  \n  return (\n    <div className=\"bodyMain\">\n      <div>\n        {showCard ?\n        <Answer /> :\n        <h1 className=\"question\">{ nameUser ? nameUser : 'Querent' }, think about a question...</h1>\n        }\n      </div>\n      {!showCard && <button className=\"button\" type=\"button\" onClick={ handleClick }>Get my answer</button>}\n      <div className=\"div-footer\">\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport TarotProvider from '../src/context/tarotProvider';\nimport Login from '../src/pages/Login';\nimport MainPage from '../src/pages/MainPage';\n\nfunction App() {\n  return (\n    <TarotProvider>\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/main-page\" component={ MainPage } />\n      </Switch>\n    </TarotProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter basename={window.location.pathname || ''} >\n    <App />\n  </BrowserRouter>, document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}